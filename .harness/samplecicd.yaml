pipeline:
    name: sample-cicd
    identifier: samplecicd
    projectIdentifier: Org01_Proj01
    orgIdentifier: Org01
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: pipeline_git01
                repoName: firstdrone
                build: <+input>
    stages:
        - stage:
              name: buildstage
              identifier: buildstage
              description: ""
              type: CI
              spec:
                  cloneCodebase: true
                  execution:
                      steps:
                          - step:
                                type: BuildAndPushDockerRegistry
                                name: dockerImageForm
                                identifier: dockerImageForm
                                spec:
                                    connectorRef: dockerconnector
                                    repo: shreyadey16/sample-ci-cd-harness
                                    tags:
                                        - latest
                  infrastructure:
                      type: KubernetesHosted
                      spec:
                          identifier: k8s-hosted-infra
        - stage:
              name: CD
              identifier: CD
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: nginx
                      serviceDefinition:
                          spec:
                              variables: []
                              manifests:
                                  - manifest:
                                        identifier: manifest02
                                        type: K8sManifest
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: configgit
                                                    gitFetchType: Branch
                                                    paths:
                                                        - " content/en/examples/application/nginx-app.yaml"
                                                    repoName: website
                                                    branch: main
                                            skipResourceVersioning: false
                          type: Kubernetes
                  infrastructure:
                      environmentRef: sampleEnvironment
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.Harness_Kubernetes_Cluster
                              namespace: harness-delegate-ng
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
